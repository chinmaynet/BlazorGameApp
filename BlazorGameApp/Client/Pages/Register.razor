@page "/register"
@inject IUnitService UnitService
@* @inject IJSRuntime JSRuntime *@
@inject NavigationManager navigationManager
@inject IAuthService AuthService
@inject IToastService ToastService 

<h3>Register</h3>
<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <label class="required" for="username">User Name</label>
        <InputText id="username" @bind-Value="user.UserName" class="form-control"></InputText>
        <ValidationMessage For="@(()=>user.UserName)" />
    </div>
    <div class="form-group">
        <label class="required" for="userpassword">User Password</label>
        <InputText id="userpassword" @bind-Value="user.Password" type="password" class="form-control"></InputText>
        <ValidationMessage For="@(()=>user.Password)" />
    </div>
    <div class="form-group">
        <label for="confirmpassword">Confirm Password</label>
        <InputText id="confirmpassword" @bind-Value="user.ConfirmPassword" type="password" class="form-control"></InputText>
        <ValidationMessage For="@(()=>user.ConfirmPassword)" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
        <ValidationMessage For="@(()=>user.Email)" />
    </div>


    <div class="form-group">
        <label for="bio">Bio</label>
        <InputTextArea id="bio" @bind-Value="user.Bio" class="form-control"></InputTextArea>
        <ValidationMessage For="@(()=>user.Bio)" />
    </div>

    @*  <div class="form-group">
    <label for="bio">Start Unit</label>
    <InputSelect id="startUnit" @bind-Value="user.StartUnitId" class="form-control">
    @foreach (var unit in UnitService.Units)
    {
    <option value="@unit.Id">@unit.Title</option>
    }
    </InputSelect>
    <ValidationMessage For="@(()=>user.StartUnitId)" />
    </div> *@

    <div class="form-group">
        <label for="startUnit">Start Unit</label><br />
        <InputRadioGroup id="startUnit" @bind-Value="user.StartUnitId" class="form-control">
            @foreach (var unit in UnitService.Units)
            {
                <div>
                    <InputRadio id="@($"radio-{unit.Id}")" Value="@unit.Id" />
                    <label for="@($"radio-{unit.Id}")">@unit.Title</label>
                </div>
            }
        </InputRadioGroup>
        <ValidationMessage For="@(()=>user.StartUnitId)" />
    </div>


    <div class="form-group">
        <label for="bananas">Bananas</label>
        <InputNumber id="bananas" @bind-Value="user.Bananas" class="form-control"></InputNumber>
        <ValidationMessage For="@(()=>user.Bananas)" />
    </div>


    <div class="form-group">
        <label for="dateOfBirth">Date Of Birth</label>
        <InputDate id="dateOfBirth" @bind-Value="user.DateOfBirth" class="form-control"></InputDate>
        <ValidationMessage For="@(()=>user.DateOfBirth)" />
    </div>


    <div class="form-check">
        <InputCheckbox id="confirmed" @bind-Value="user.IsConfirmed" class="form-check"></InputCheckbox>
        <label for="confirmed">Confirmed</label>

        <ValidationMessage For="@(()=>user.IsConfirmed)" />
    </div>


    <button type="submit" class="btn btn-primary">Register</button>
    <ValidationSummary></ValidationSummary>
</EditForm>
@code {
    UserRegister user = new UserRegister();

    protected override async Task OnInitializedAsync()
    {
        await UnitService.LoadUnitsAsync();
        // return base.OnInitializedAsync();
    }

    async void HandleRegistration()
    {
        var result = await AuthService.Register(user);
        if (result.Success)
        {
            ToastService.ShowSuccess(result.Message);
            navigationManager.NavigateTo("/");
        }
        else
        {
             ToastService.ShowError(result.Message);
        }

        // JSRuntime.InvokeVoidAsync("console.log", user);
        // navigationManager.NavigateTo("login");

        // Console.WriteLine($"{user.Bananas}//{user.UserName} //{user.Email} // {user.Bio}");
    }
}
